import{_ as n,a as t,b as s,c,d as o,e as u,f as p,g as h,h as m,i as v,j as b,k as g,l as x,m as k,n as f,o as _,p as C,q as y,r as K,s as E,t as S,u as w,v as P,w as L,x as T,y as M}from"./uchecker-31d683fa.js";import{_ as O}from"./eportal-qemu-feed-7c9efdb9.js";import{_ as A,r as I,o as D,c as U,b as e,d as a,e as d,w as l,a as i}from"./app-d6b3729a.js";const N={},Y=i(`<h1 id="ライブパッチ適用サービス" tabindex="-1"><a class="header-anchor" href="#ライブパッチ適用サービス" aria-hidden="true">#</a> ライブパッチ適用サービス</h1><p>ライブパッチ適用サービスの一環として、TuxCareは以下のサービスを提供します。</p><ul><li>KernelCare Enterprise</li><li>LibCare</li><li>KernelCare for IOT</li><li>QEMUCare</li><li>DBCare（ベータ版で利用可能）</li></ul><h2 id="kernelcare-enterprise" tabindex="-1"><a class="header-anchor" href="#kernelcare-enterprise" aria-hidden="true">#</a> KernelCare Enterprise</h2><h3 id="概要" tabindex="-1"><a class="header-anchor" href="#概要" aria-hidden="true">#</a> 概要</h3><p>KernelCare Enterpriseは、さまざまな人気のLinuxカーネルに、システムを再起動することなしにインストール可能なセキュリティパッチとバグ修正を提供するライブカーネルパッチ適用サービスです。</p><h3 id="メリット" tabindex="-1"><a class="header-anchor" href="#メリット" aria-hidden="true">#</a> メリット</h3><p>現在、システム管理者は、最新のカーネルアップデートを適用するのに、サーバーを再起動する必要があります。このアップデートは、セキュリティ上の問題を防ぐために必要です。ただし、再起動に伴うダウンタイムのせいで、このようなアップデートは遅れがちで、深夜の時間帯になりがちです。ダウンタイムを回避するために、サーバーの所有者が数ヶ月、数年もシステムをアップデートせずに、脆弱なシステムを実行し続けることはめずらしいことではありません。マネージドサービスプロバイダは、ダウンタイムを計画し、リソースを圧迫しながら短時間に数千台のサーバーのアップデートと再起動をする問題に直面しています。KernelCareは、再起動不要のライブカーネルパッチ適用サービスを提供することで、このアップデートと再起動の問題を解決します。</p><h3 id="主な機能" tabindex="-1"><a class="header-anchor" href="#主な機能" aria-hidden="true">#</a> 主な機能</h3><ul><li>再起動不要のLinuxカーネルパッチ適用とカスタムパッチ適用</li><li>オンプレミスでも、クラウドでも利用可能</li><li>保護されたインフラストラクチャ用のプライベートパッチサーバー、ePortal</li><li>追加設定不要で、パッチ管理・脆弱性評価ツールと統合</li></ul><h3 id="試用ライセンスの取得" tabindex="-1"><a class="header-anchor" href="#試用ライセンスの取得" aria-hidden="true">#</a> 試用ライセンスの取得</h3><p>KernelCare Enterpriseのご利用には、試用版アクティベーションキーが必要です。試用ライセンスは7日間有効です。</p><p>アクティベーションキーの取得に問題がある場合や試用版の使用に関してご不明点がある場合は、<a href="mailto:sales@cloudlinux.com">sales@cloudlinux.com</a> までご連絡ください。私たちがお助けします。</p><h3 id="インストール" tabindex="-1"><a class="header-anchor" href="#インストール" aria-hidden="true">#</a> インストール</h3><p>KernelCare Enterpriseは、64ビット版のAlmaLinux/CloudLinuxOS/CentOS/RHEL 6、7、8、Oracle Linux 6、7、Amazon Linux 1、2、Virtuozzo／PCS／OpenVZ 2.6.32、Debian 8、9、10、Proxmox VE 5 、6、Virt-SIG／Xen 4CentOS 6、7、Ubuntu 14.04、15.04、16.04、18.04、20.04カーネルと互換性があります。互換性のあるカーネル一覧は、<a href="https://patches.kernelcare.com/" target="_blank" rel="noopener noreferrer">https://patches.kernelcare.com/</a> からご覧いただけます。</p><p>KernelCare Enterpriseをインストールするには、以下を実行します。</p><div class="language-text line-numbers-mode" data-ext="text"><pre class="language-text"><code>curl -s -L https://kernelcare.com/installer | bash
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><p>または</p><div class="language-text line-numbers-mode" data-ext="text"><pre class="language-text"><code>wget -qq -O - https://kernelcare.com/installer | bash
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><p>IPベースのライセンスをご利用の場合は、他に何もする必要はありません。</p><p>キーベースのライセンスをご利用の場合は、以下を実行します。</p><div class="language-text line-numbers-mode" data-ext="text"><pre class="language-text"><code>$ /usr/bin/kcarectl --register KEY
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><p><code>KEY</code>は、製品の購入または試用の申し込みの際に提供された登録キー文字列です。</p><p>もし試用期間終了後に**<em>Key limit reached</em>**というエラーが発生している場合は、まず以下のコマンドを実行して、サーバーの登録を解除する必要があります。</p><div class="language-text line-numbers-mode" data-ext="text"><pre class="language-text"><code>kcarectl --unregister
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><p>パッチが適用済みかどうかを確認するには、以下を実行します。</p><div class="language-text line-numbers-mode" data-ext="text"><pre class="language-text"><code>$ /usr/bin/kcarectl --info
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><p>ソフトウェアは、4時間ごとに新しいパッチを自動的に確認します。</p><p>アップデートを手動で実行する場合</p><div class="language-text line-numbers-mode" data-ext="text"><pre class="language-text"><code>$ /usr/bin/kcarectl --update
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><p>現在のカーネルとKernelCareの互換性を確認するには、以下の<a href="https://raw.githubusercontent.com/iseletsk/kernelchecker/master/py/kc-compat.py" target="_blank" rel="noopener noreferrer">スクリプト</a>を実行します。</p><div class="language-text line-numbers-mode" data-ext="text"><pre class="language-text"><code>curl -s -L https://kernelcare.com/checker | python
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><p>または</p><div class="language-text line-numbers-mode" data-ext="text"><pre class="language-text"><code>wget -qq -O - https://kernelcare.com/checker | python
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><h3 id="アップデート" tabindex="-1"><a class="header-anchor" href="#アップデート" aria-hidden="true">#</a> アップデート</h3><p>エージェントパッケージを最新バージョンにアップデートするには、以下を使用します。</p><ul><li>rpmベースのディストリビューション（CentOS、RedHatなど）の場合</li></ul><div class="language-text line-numbers-mode" data-ext="text"><pre class="language-text"><code>yum install -y kernelcare
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><ul><li>aptベースのディストリビューション（Debian、Ubuntuなど）の場合</li></ul><div class="language-text line-numbers-mode" data-ext="text"><pre class="language-text"><code>apt-get install kernelcare
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><h3 id="アンインストール" tabindex="-1"><a class="header-anchor" href="#アンインストール" aria-hidden="true">#</a> アンインストール</h3><p>KernelCare Enterpriseをアンインストールするには、以下を実行します。</p><p><em>CloudLinux、CentOS、RHEL、Virtuozzo、OpenVZの場合</em></p><div class="language-text line-numbers-mode" data-ext="text"><pre class="language-text"><code>$ yum remove kernelcare
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><p><em>Ubuntu、Debian、Proxmox VEの場合</em></p><div class="language-text line-numbers-mode" data-ext="text"><pre class="language-text"><code>apt-get remove kernelcare
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><div class="language-text line-numbers-mode" data-ext="text"><pre class="language-text"><code>dpkg --remove kernelcare
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><p>また、これにより、システムはアクティベーションキーとのリンクが解除されます（CLNポータルへのネットワーク接続がある場合）。ただし、今後サービスの利用予定がない場合は、CLNポータルから手動でライセンスを削除する必要があります。</p><h3 id="kspliceからの切り替え" tabindex="-1"><a class="header-anchor" href="#kspliceからの切り替え" aria-hidden="true">#</a> Kspliceからの切り替え</h3><p>KspliceからKernelCare Enterpriseに切り替えるには、以下のスクリプトを使用してください。Kspliceがアンインストールされ、代わりにKernelCare Enterpriseがインストールされます。</p><p>システムが64ビットでない場合は、自動的に検出され、中止されます（KernelCare Enterpriseは64ビットではないシステムをサポートしていません）。</p><p>Kspliceモジュールをアンインストールできない場合も検出され、複数回再試行されます。</p><p>こちらからスクリプトをダウンロードしてください。 <a href="https://patches.kernelcare.com/ksplice2kcare" target="_blank" rel="noopener noreferrer">https://patches.kernelcare.com/ksplice2kcare</a>.</p><p>以下のコマンドを実行します。</p><div class="language-text line-numbers-mode" data-ext="text"><pre class="language-text"><code>$ bash ksplice2kcare $KERNELCARE_KEY$
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><p>キーは、CLNの「KernelCare Enterprise Keys」欄で作成／取得できます。</p><p>IPベースのライセンスの使用をご希望の場合は、以下を実行します。</p><div class="language-text line-numbers-mode" data-ext="text"><pre class="language-text"><code>$ bash ksplice2kcare IP
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><p>そのサーバー用のIPライセンスを追加する必要があります。実際のIPではなく、「IP」という2文字のみを入力してください。</p><p>デフォルトでは、スクリプトはKspliceのアンインストールを3回試行します。試行間の待機時間は60秒です。待機をご希望でない場合は、nohupを使用して実行できます。</p><p>スクリプトを編集して、<code>RETRY</code>と<code>SLEEP</code>の値を変更することで、試行回数と待機時間を変更することができます。</p><p>成功すると、スクリプトは終了コード<code>0</code>を返し、_Done_というメッセージが表示されます。それ以外の場合は、終了コード<code>-1</code>が返されます。</p><p>完全なログ ファイルは、<code>/var/log/ksplice2kcare.log</code> にあります。</p><h4 id="canonical-livepatch" tabindex="-1"><a class="header-anchor" href="#canonical-livepatch" aria-hidden="true">#</a> Canonical Livepatch</h4><p>KernelCare Enterpriseは、Canonical Livepatchとは互換性がありません。同じシステムで使用しないでください。</p><h3 id="基本管理" tabindex="-1"><a class="header-anchor" href="#基本管理" aria-hidden="true">#</a> 基本管理</h3><p>自動アップデートを無効にするには、ファイル<code>/etc/sysconfig/kcare/kcare.conf</code>を編集してください。</p><div class="language-text line-numbers-mode" data-ext="text"><pre class="language-text"><code>AUTO_UPDATE=False 
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><p>アップデート済みの（「有効な」）バージョンを確認するには、以下を実行します。</p><div class="language-text line-numbers-mode" data-ext="text"><pre class="language-text"><code>$ /usr/bin/kcarectl --uname 
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><p><code>uname</code>と同じ構文の便利スクリプト<code>/usr/bin/kcare-uname</code> を提供しています。</p><p>適用済みのパッチを表示するには、以下を実行します。</p><div class="language-text line-numbers-mode" data-ext="text"><pre class="language-text"><code>$ /usr/bin/kcarectl --patch-info 
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><h3 id="コマンドラインツール" tabindex="-1"><a class="header-anchor" href="#コマンドラインツール" aria-hidden="true">#</a> コマンドラインツール</h3><p><code>/usr/bin/kcarectl</code> - ご利用のカーネル用のKernelCare Enterpriseパッチを管理します。</p><p><code>/usr/bin/kcare-uname</code> - 特定のシステム情報を出力します。</p><h4 id="kcarectl" tabindex="-1"><a class="header-anchor" href="#kcarectl" aria-hidden="true">#</a> kcarectl</h4>`,77),R=e("thead",null,[e("tr",null,[e("th"),e("th")])],-1),q=e("tr",null,[e("td",null,[e("code",null,"-i, --info")]),e("td",null,"KernelCare Enterpriseによってインストールされたパッチに関する情報を表示します。")],-1),$=e("tr",null,[e("td",null,[e("code",null,"-u, --update ")]),e("td",null,"最新のパッチをダウンロードして、現在のカーネルに適用します。")],-1),H=e("td",null,[e("code",null,"--smart-update [since 1.6] ")],-1),V=e("tr",null,[e("td",null,[e("code",null,"--unload")]),e("td",null,"パッチをアンロードします。")],-1),F=e("tr",null,[e("td",null,[e("code",null,"--auto-update")]),e("td",null,"アップデートが必要かどうかを確認し、アップデートします。")],-1),B=e("tr",null,[e("td",null,[e("code",null,"--patch-info")]),e("td",null,"適用済みのパッチを一覧表示します。")],-1),z=e("tr",null,[e("td",null,[e("code",null,"--force [since 2.3] ")]),e("td",null,"updateと共に使用すると、フリーズできないスレッドがある場合でも、強制的にパッチを適用します。")],-1),G=e("tr",null,[e("td",null,[e("code",null,"--uname")]),e("td",null,"安全なカーネルバージョンを出力します。")],-1),Q=e("tr",null,[e("td",null,[e("code",null,"--license-info")]),e("td",null,"現在のライセンス情報を出力します。")],-1),W=e("tr",null,[e("td",null,[e("code",null,"--register KEY")]),e("td",null,"KernelCare Enterprise Keyを使用して登録します。")],-1),X=e("tr",null,[e("td",null,[e("code",null,"--register-autoretry [since 2.5]")]),e("td",null,"登録が失敗した場合、無期限に再試行を行います。")],-1),j=e("tr",null,[e("td",null,[e("code",null,"--unregister")]),e("td",null,"キーベースのサーバー用KernelCare Enterpriseから登録解除します。")],-1),Z=e("tr",null,[e("td",null,[e("code",null,"--userspace-update [PATCHES]")]),e("td",null,"最新のパッチをダウンロードして、対応するユーザー空間プロセスに適用します。特定の種類のパッチのみが適用されるように設定できます。")],-1),J=e("tr",null,[e("td",null,[e("code",null,"--test")]),e("td",null,"本番ビルドの代わりにテストビルドを試行します（非推奨、代わりに--prefix=testを使用してください）。")],-1),ee=e("tr",null,[e("td",null,[e("code",null,"--prefix")]),e("td",null,"プレフィックスに基づいて、異なる場所からビルドをダウンロードすることにより、さまざまなビルドをテストするのに使用されるパッチソース用プレフィックス（バージョン2.2以上）")],-1),ae=e("tr",null,[e("td",null,[e("code",null,"--version")]),e("td",null,"KernelCare Enterpriseのバージョンを出力します。")],-1),ie=e("tr",null,[e("td",null,[e("code",null,"--import-key PATH")]),e("td",null,"gpgキーをインポートします。")],-1),re=e("tr",null,[e("td",null,[e("code",null,"--set-monitoring-key")]),e("td",null,"IPベースのライセンスの監視キーを設定します。16文字以上32 文字以内、英数字のみ（バージョン2.1以上）")],-1),de=e("tr",null,[e("td",null,[e("code",null,"--freezer [since 2.3] ")]),e("td",null,[a("none：どのスレッドもフリーズしません。"),e("br"),a("full：すべてのスレッドをフリーズします。"),e("br"),a("smart：パッチ適用のためにフリーズする必要があるスレッドのみをフリーズします。オプションが選択されていない場合、最適なフリーズ方法が自動的に選択されます。")])],-1),le=e("tr",null,[e("td",null,[e("code",null,"--check [since 2.4-1]")]),e("td",null,"新しいパッチセットが利用可能かどうかをアップデートすることなしに確認します。終了コードは、新しいカーネルがある場合は0、ない場合は1になります。")],-1),ne=e("tr",null,[e("td",null,[e("code",null,"--doctor [since 2.6]")]),e("td",null,"診断のためにTuxCareサポートスタッフにレポートを送信します。")],-1),te=e("tr",null,[e("td",null,[e("code",null,"--set-patch-type extra ")]),e("td",null,"追加のパッチを有効にします。")],-1),se=e("tr",null,[e("td",null,[e("code",null,"--set-patch-type free")]),e("td",null,"無料パッチを有効にします。")],-1),ce=e("td",null,[e("code",null,"--set-sticky-patch SET_STICKY_PATCH")],-1),oe=e("tr",null,[e("td",null,[e("code",null,"--tag COMMAND")]),e("td",null,"サーバー用のその他の_Tag_フィールドを追加します。 COMMANDはユーザー定義のパラメータです。")],-1),ue=i(`<div class="tip custom-block"><p class="custom-block-title">注</p><p>現在利用可能なユーザースペースパッチタイプは、<code>libs</code>と<code>qemu</code>です。共有ライブラリのみにパッチを適用するには、<code>--userspace-update libs</code>を使用してください。</p></div><h4 id="kcare-uname" tabindex="-1"><a class="header-anchor" href="#kcare-uname" aria-hidden="true">#</a> kcare-uname</h4><p>特定のシステム情報を出力します。オプションなしの場合は、<code>-s</code>と同じです。</p><table><thead><tr><th></th><th></th></tr></thead><tbody><tr><td><code>-a, --all</code></td><td>すべての情報を以下の順序で出力します。ただし、不明な場合は、<code>-p</code>と<code>-i</code>を省略します</td></tr><tr><td><code>-s, --kernel-name</code></td><td>カーネル名を出力します</td></tr><tr><td><code>-n, --nodename</code></td><td>ネットワークノードのホスト名を出力します</td></tr><tr><td><code>-r, --kernel-release</code></td><td>カーネルリリースを出力します</td></tr><tr><td><code>-v, --kernel-version</code></td><td>カーネルのバージョンを出力します</td></tr><tr><td><code>-m, --machine</code></td><td>マシンのハードウェア名を出力します</td></tr><tr><td><code>-p, --processor</code></td><td>プロセッサタイプ（不明な場合には<code>unknown</code>）を出力します</td></tr><tr><td><code>-i, --hardware-platform</code></td><td>ハードウェアプラットフォーム（不明な場合には<code>unknown</code>）を出力します</td></tr><tr><td><code>-o, --operating-system</code></td><td>オペレーティングシステムを出力します</td></tr><tr><td><code>--help</code></td><td>このヘルプを表示して終了します</td></tr><tr><td><code>--version</code></td><td>バージョン情報を出力して終了します</td></tr></tbody></table><h4 id="kernelcare-doctor" tabindex="-1"><a class="header-anchor" href="#kernelcare-doctor" aria-hidden="true">#</a> kernelcare doctor</h4><p>このツールは、KernelCare環境に関する重要な情報を収集し、サポートチームに送信します。</p><div class="language-text line-numbers-mode" data-ext="text"><pre class="language-text"><code># kcarectl --doctor
Generating report...
Uploading...
Key: FRWf74Zw11111111.83991334-1111-1111-1111-681ddd653e5f
Please, provide above mentioned key to KernelCare Support Team

</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>このコマンドはレポートを生成し、サポートチケットとリンク可能なIDを出力します。</p><div class="tip custom-block"><p class="custom-block-title">注</p><p>レポートのアップロード中に接続の問題が発生した場合、レポートは<code>/root/cl-report</code> としてローカルに保存されます。このファイルは、サポートチームに手動で送信する必要があります。</p></div><h3 id="設定オプション" tabindex="-1"><a class="header-anchor" href="#設定オプション" aria-hidden="true">#</a> 設定オプション</h3><p><code>kcarectl</code>の動作は、<code>/etc/sysconfig/kcare/kcare.conf</code>を使用して設定することができます。</p>`,11),pe=e("thead",null,[e("tr",null,[e("th"),e("th")])],-1),he=e("tr",null,[e("td",null,"`AUTO_UPDATE=YES"),e("td",null,"NO`")],-1),me=e("tr",null,[e("td",null,[e("code",null,"chkconfig kcare off")]),e("td",null,"再起動後の自動アップデートを無効にします。")],-1),ve=e("tr",null,[e("td",null,"`PATCH_METHOD=normal"),e("td",null,"nofreeze")],-1),be=e("tr",null,[e("td",null,[e("code",null,"PATCH_SERVER")]),e("td",null,"パッチをダウンロードするのに使用するサーバー。")],-1),ge=e("tr",null,[e("td",null,[e("code",null,"REGISTRATION_URL")]),e("td",null,"ライセンスサーバー。")],-1),xe=e("tr",null,[e("td",null,[e("code",null,"PREFIX=prefix")]),e("td",null,"プレフィックスに基づいて、異なる場所からビルドをダウンロードすることにより、さまざまなビルドをテストするために使用されるパッチソースプレフィックス（バージョン2.2以上）")],-1),ke=e("tr",null,[e("td",null,"`UPDATE_POLICY=REMOTE"),e("td",null,"LOCAL")],-1),fe=e("tr",null,[e("td"),e("td")],-1),_e=e("tr",null,[e("td",null,"`IGNORE_UNKNOWN_KERNEL=True"),e("td",null,[a("False"),e("code"),a("[since 2.5-4]`")])],-1),Ce=e("tr",null,[e("td",null,[e("code",null,"LOAD_KCARE_SYSCTL [since 2.7-1]")]),e("td",null,[a("パッチセットのロード時に"),e("code",null,"/etc/sysconfig/kcare/sysctl.conf"),a("をロードするかどうかを制御します。デフォルトでは、Trueです。")])],-1),ye=e("tr",null,[e("td",null,[e("code",null,"--set-patch-type extra")]),e("td",null,"追加のパッチを有効にします。")],-1),Ke=e("tr",null,[e("td",null,[e("code",null,"--set-patch-type free")]),e("td",null,"無料パッチを有効にします。")],-1),Ee=e("tr",null,[e("td",null,[e("code",null,"STICKY_PATCH=KEY")]),e("td",null,[e("code",null,"KEY"),a("からStickyパッチを取得します（CLNのKey Editを参照してください）。 IPベースのサーバーやePortalではサポートされていません。")])],-1),Se=e("td",null,[e("code",null,"STICKY_PATCH=DDMMYY")],-1),we=e("tr",null,[e("td",null,"`REPORT_FQDN=True"),e("td",null,"False`")],-1),Pe=e("tr",null,[e("td",null,[e("code",null,"FORCE_GID=N")]),e("td",null,[a("このグループIDをシンボリックリンク保護パッチに使用します。デフォルトでは、48（デフォルトのApacheユーザーGID）または99（"),e("code",null,"nobody"),a("ユーザー）です。")])],-1),Le=e("tr",null,[e("td",null,[e("code",null,"USERSPACE_PATCHES=libs,qemu")]),e("td",null,"デフォルトでどのユーザー空間パッチが適用されるかを定義します")],-1),Te=i(`<h3 id="一部パッチの無効化" tabindex="-1"><a class="header-anchor" href="#一部パッチの無効化" aria-hidden="true">#</a> 一部パッチの無効化</h3><p>一部のパッチは、システムの動作に影響を与える可能性があります。それらのパッチを無効化する方法を作成してあります。</p><p>これは、<code>sysctl</code>コマンドを通して行われます。</p><p>新しいパッチセットがロードされると、KernelCare Enterpriseのsysctlオプションがリセットされます。これを防止するために、以下のファイルを追加してあります。</p><p><code>/etc/sysconfig/kcare/sysctl.conf</code></p><p>このファイルのオプションは、新しいパッチセットがロードされる時に自動的にロードされます。</p><p>これらのオプションの読み込みを無効にするには、以下を見つけてください。</p><p><code>/etc/sysconfig/kcare/kcare.conf</code>の<code>LOAD_KCARE_SYSCTL=0</code></p><p>パッチを無効にするには、対応するkcareのオプションを1に設定します。</p><p>無効にできるパッチは、以下です。</p><table><thead><tr><th></th><th></th></tr></thead><tbody><tr><td>パッチ</td><td>sysctlオプション</td></tr><tr><td>CVE-2015-5157</td><td>kcare_modify_ldt</td></tr></tbody></table><h1 id="追加のパッチセット" tabindex="-1"><a class="header-anchor" href="#追加のパッチセット" aria-hidden="true">#</a> 追加のパッチセット</h1><div class="tip custom-block"><p class="custom-block-title">注</p><p>KernelCare Enterprise 2.12-5以降</p></div><p>KernelCare Enterprise Extraパッチセットには、AlmaLinux、CentOS 6、CentOS 7、CentOS 8用KernelCare Enterpriseからすべてのセキュリティ修正と、CentOS 6用シンボリックリンク保護、IPSetバグ修正が含まれています。</p><p>追加のパッチを有効にして、パッチを適用するには、以下を実行します。</p><div class="language-text line-numbers-mode" data-ext="text"><pre class="language-text"><code>kcarectl --set-patch-type extra --update
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><p>アップデートせずに追加のパッチを有効にするには、以下を実行します。</p><div class="language-text line-numbers-mode" data-ext="text"><pre class="language-text"><code>kcarectl --set-patch-type extra
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><p>「追加の」パッチは、次の自動アップデートで適用されます。</p><p>詳細を見るには、以下を実行します。</p><div class="language-text line-numbers-mode" data-ext="text"><pre class="language-text"><code>kcarectl --patch-info
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><p>以下のような出力が表示されるはずです。</p><div class="language-text line-numbers-mode" data-ext="text"><pre class="language-text"><code>OS: centos6
kernel: kernel-2.6.32-696.6.3.el6
time: 2017-07-31 22:46:22
uname: 2.6.32-696.6.3.el6
 
kpatch-name: 2.6.32/symlink-protection.patch
kpatch-description: symlink protection // If you see this patch, it mean that you can enable symlink protection.
kpatch-kernel: kernel-2.6.32-279.2.1.el6
kpatch-cve: N/A
kpatch-cvss: N/A
kpatch-cve-url: N/A
kpatch-patch-url: https://gerrit.cloudlinux.com/#/c/16508/
 
kpatch-name: 2.6.32/symlink-protection.kpatch-1.patch
kpatch-description: symlink protection (kpatch adaptation)
kpatch-kernel: kernel-2.6.32-279.2.1.el6
kpatch-cve: N/A
kpatch-cvss: N/A
kpatch-cve-url: N/A
kpatch-patch-url: https://gerrit.cloudlinux.com/#/c/16508/
 
kpatch-name: 2.6.32/ipset-fix-list-shrinking.patch
kpatch-description: fix ipset list shrinking for no reason
kpatch-kernel: N/A
kpatch-cve: N/A
kpatch-cvss: N/A
kpatch-cve-url: N/A
kpatch-patch-url: https://bugs.centos.org/view.php?id=13499
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>Symlink Owner Match Protectionを有効にするには、以下の行を追加します。</p><p><code>fs.enforce_symlinksifowner=1</code></p><p>を<code>/etc/sysconfig/kcare/sysctl.conf</code>へ。</p><p>そして、以下を実行してください。</p><div class="language-text line-numbers-mode" data-ext="text"><pre class="language-text"><code>sysctl -w fs.enforce_symlinksifowner=1
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><h3 id="stickyパッチ" tabindex="-1"><a class="header-anchor" href="#stickyパッチ" aria-hidden="true">#</a> Stickyパッチ</h3>`,29),Me={class:"tip custom-block"},Oe=e("p",{class:"custom-block-title"},"注",-1),Ae=i('<p>最新のパッチの使用をご希望でない代わりに、インストールするパッチの制御をご希望の場合があります。たとえば、2018年5月25日にリリースされたパッチをテスト済みで、そのパッチをすべてのサーバーで使用したいとします。</p><p>これは、<code>/etc/sysconfig/kcare/kcare.conf</code>で<code>STICKY_PATCH=250518</code>（<code>DDMMYY</code>形式）と設定することで、実現できます。これにより、<code>kcarectl --update</code>または<code>kcarectl --auto-update</code>が呼びだされたときに、最新のパッチではなく、その日付からパッチが取得されることが保証されます。</p><p><code>STICKY_PATCH</code>を使用すれば、60日前までさかのぼることができます。</p><p>また、代わりに<code>STICKY_PATCH=KEY</code>を設定することもできます。このようにして、CLNのKernelCareキーを使用して、どの日付からパッチが適用されるかを制御することができます。特定のサーバーを登録するのに使用されるキーにより、アップデート時にCLNから（キー設定から）実際の日付が取得されます（IPベースのサーバー向けはサポートされていません）。</p><p>これは、最初にパッチを検証環境でテストし、後でシステムを何も変更することなしに本番環境にロールアウトするのをご希望の場合に、非常に便利です。</p><p>手順は以下になります。</p><ul><li>すべてのサーバーで、<code>STICKY_PATCH=KEY</code>を設定します。</li><li>検証サーバーをあるKEYで登録し、本番サーバーを別のKEYで登録します。</li><li>T次に、本番サーバーの新規のアップデートを停止します。CLNで<code>Sticky Tag</code>を<code>yesterday</code>に設定します。これは、CLNのKEYをDDMMYY形式で編集することで実現できます。</li><li>ここで、たとえば、03052018（DDMMYY形式）時点のパッチを使用してみましょう。パッチを検証サーバーのキーに設定します。次回の自動アップデートで、検証サーバーはそのパッチを取得します（通常、自動アップデートは4時間ごとに行われます）。</li></ul><p>このパッチに問題がない場合は、本番サーバーのキーに同じSticky Tagを設定します。4時間以内に、本番サーバーにも検証サーバーと同じパッチが適用されるはずです。</p><div class="tip custom-block"><p class="custom-block-title">注</p><p>過去60日以内の任意の日付を選択できます。今日の日付や未来の日付は選択できません。</p></div><h4 id="適切なstickyパッチ名の見つけ方" tabindex="-1"><a class="header-anchor" href="#適切なstickyパッチ名の見つけ方" aria-hidden="true">#</a> 適切なStickyパッチ名の見つけ方</h4><p>適用をご希望のカーネルパッチがあるとします。必要なのは、そのパッチの適切なラベルを見つけることだけです。</p><p><img src="'+n+'" alt="sticky-proper-label"></p><p>ご覧のとおり、パッチのリリース日は2020年09月16日です。ラベルの日付形式を適用すると、Stickyパッチの値の16092020になります。</p><h3 id="スキャナーインタフェース" tabindex="-1"><a class="header-anchor" href="#スキャナーインタフェース" aria-hidden="true">#</a> スキャナーインタフェース</h3><h4 id="問題の説明" tabindex="-1"><a class="header-anchor" href="#問題の説明" aria-hidden="true">#</a> 問題の説明</h4><p>一般的に使用されているセキュリティスキャナーによって、KernelCare Enterpriseによってパッチが適用済みの場合も、CVEが検出される場合があります。 判明したところによると、CVEに関するすべての決定は、以下に基づいています。</p><ul><li>現在インストールされている（または、されていない）カーネルパッケージ</li><li>uname情報</li></ul><h4 id="使用方法" tabindex="-1"><a class="header-anchor" href="#使用方法" aria-hidden="true">#</a> 使用方法</h4><p>使用方法は、かなり単純です。パッケージをインストールしてパッチセットを適用した後の新しいスキャン結果には、KernelCare Enterpriseによって処理済みのカーネルCVEは非表示になるべきです。</p><p>たとえば、古いカーネルに対して、Nessusは検出されたCVEを多数表示します。</p><p><img src="'+t+'" alt=""></p><p>パッチ適用後には、カーネル関連のCVEはありません</p><p><img src="'+s+`" alt=""></p><h3 id="uefiセキュアブートのサポート" tabindex="-1"><a class="header-anchor" href="#uefiセキュアブートのサポート" aria-hidden="true">#</a> UEFIセキュアブートのサポート</h3><div class="tip custom-block"><p class="custom-block-title">注</p><p>この機能は、採用の初期段階にあります。すべてのディストリビューションにサポートされているわけではありません。</p></div><p>この新機能により、KernelCareは、UEFIファームウェアでセキュアブートが設定されたシステムで動作します。KernelCareがモジュールの署名に使用するMOK（Machine Owner Keys）データベースに公開証明書を追加予定です。</p><p>最新のKernelCareパッケージには、公開証明書が含まれており、<code>/usr/libexec/kcare/kernelcare_pub.der</code>で入手できます。以前のバージョンの場合は、 <a href="https://patches.kernelcare.com/kernelcare_pub.der" target="_blank" rel="noopener noreferrer">https://patches.kernelcare.com/kernelcare_pub.der</a> からその場所にダウンロードすることができます。</p><p>例えば、</p><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code>curl -o /usr/libexec/kcare/kernelcare_pub.der https://patches.kernelcare.com/kernelcare_pub.der

</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div></div></div><ol><li>rootユーザーで<code>mokutil</code>を使用して、この新しいMOKをUEFIファームウェアに追加します。</li></ol><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code>$ mokutil --import /usr/libexec/kcare/kernelcare_pub.der
 input password:
 input password again:
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>MOKのパスワードはないので、<code>mokutil</code>によってパスワードを作成するように求められます。これは仮のパスワードで、次回の起動時に使用されます。</p><ol start="2"><li>マシンを再起動して、MOKマネージャーEFIユーティリティに入ります。</li></ol><p>まず、「Enroll MOK」に移動します。</p><p><img src="`+c+'" alt="alt text" title="Select Enroll MOK"></p><p>次に、ファームウェアにより、新しいMOKを閲覧するか続行するか選択を求められます。「Continue」を選択してください。</p><p><img src="'+o+'" alt="alt text" title="Select Continue"></p><p>次に、登録の確認を求められます。</p><p><img src="'+u+'" alt="alt text" title="Select Yes"></p><p>次に、<code>mokutil --import</code>の実行時に使用したパスワードを入力する必要があります。</p><p><img src="'+p+'" alt="alt text" title="Enter the password"></p><p>最後に、ファームウェアによって、再起動が要求されます。</p><p><img src="'+h+`" alt="alt text" title="Select OK"></p><ol start="3"><li>以下のコマンドの出力でキーを見つけて、キーがロードされたことを確認します。</li></ol><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code>$ mokutil --list-enrolled | egrep -i &#39;SHA1|Issuer&#39;

</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div></div></div><p>登録済みのキーが表示されない場合がありますが、以下のコマンドで確認できます。</p><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code>$ dmesg | grep -i &#39;cloud linux&#39; 
[   0.722149] EFI: Loaded cert &#39;Cloud Linux Software, Inc: Kernel Module Signing Key: 12ff0613c0f80cfba3b2f8eba71ebc27c5a76170&#39; linked to &#39;.system_keyring&#39;
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div></div></div><p>作業は以上になります。これで、通常どおりパッチを適用できるはずです。</p><p>セキュアブート用カーネルモジュールへの署名に関して、詳しくは以下をご覧ください。 <a href="https://access.redhat.com/documentation/en-us/red_hat_enterprise_linux/8/html/managing_monitoring_and_updating_the_kernel/signing-kernel-modules-for-secure-boot_managing-monitoring-and-updating-the-kernel" target="_blank" rel="noopener noreferrer">https://access.redhat.com/documentation/en-us/red_hat_enterprise_linux/8/html/managing_monitoring_and_updating_the_kernel/signing-kernel-modules-for-secure-boot_managing-monitoring-and-updating-the-kernel</a>.</p><h3 id="ファイアウォールとプロキシの設定" tabindex="-1"><a class="header-anchor" href="#ファイアウォールとプロキシの設定" aria-hidden="true">#</a> ファイアウォールとプロキシの設定</h3><h4 id="ファイアウォールを介したサーバーへのパッチ適用" tabindex="-1"><a class="header-anchor" href="#ファイアウォールを介したサーバーへのパッチ適用" aria-hidden="true">#</a> ファイアウォールを介したサーバーへのパッチ適用</h4><p>サーバーがインターネットにアクセスできる限り、たとえNAT環境だとしても、問題なくKernelCareパッチサーバーを使用できます。</p><p>通常、KernelCareが適切に動作するためには、2台のサーバーのみの接続が必要になります。</p><div class="language-text line-numbers-mode" data-ext="text"><pre class="language-text"><code>cln.cloudlinux.com
patches.kernelcare.com
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div></div></div><p>KernelCareエージェントのインストール／アップデートには、追加のアドレスが使用されます。</p><div class="language-text line-numbers-mode" data-ext="text"><pre class="language-text"><code>repo.cloudlinux.com
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><p><img src="`+m+`" alt=""></p><h4 id="プロキシ経由のサーバーパッチ適用" tabindex="-1"><a class="header-anchor" href="#プロキシ経由のサーバーパッチ適用" aria-hidden="true">#</a> プロキシ経由のサーバーパッチ適用</h4><p>サーバーがインターネットに直接アクセスはできないけれども、プロキシを使用してインターネットにアクセスできる場合、構成にそれほど違いはありません。KernelCareは、プロキシ用の標準環境変数を取得できます。</p><p>プロキシ設定用の環境設定があることを確認してください。それ以外はすべて、サーバーが直接インターネットに接続されている場合と同じになります。</p><div class="language-text line-numbers-mode" data-ext="text"><pre class="language-text"><code># export http_proxy=http://proxy.domain.com:port
# export https_proxy=http://proxy.domain.com:port
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div></div></div><div class="tip custom-block"><p class="custom-block-title">注</p><p><code>export</code>によって定義される設定では、大文字と小文字の区別がないため、上記の例は以下のようにしてもかまいません。</p></div><div class="language-text line-numbers-mode" data-ext="text"><pre class="language-text"><code># export HTTP_PROXY=http://proxy.domain.com:port
# export HTTPS_PROXY=http://proxy.domain.com:port
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div></div></div><p>これらの設定は、KernelCareのconfig <code>/etc/sysconfig/kcare/kcare.conf</code>で定義できます。</p><p>例</p><div class="language-text line-numbers-mode" data-ext="text"><pre class="language-text"><code>$ cat /etc/sysconfig/kcare/kcare.conf
AUTO_UPDATE=True
HTTPS_PROXY=http://myproxy.com:59794
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>これらの設定をconfigで定義すると、<code>kcarectl</code>を起動するたびに設定をエクスポートする必要がなくなり、cronジョブを編集する必要もなくなります。</p><p><code>kcarectl</code>を起動する度に、configからプロキシ設定が取得されます。この場合、プロキシ設定を一度だけ設定する必要があります。</p><p><img src="`+v+'" alt=""></p><h3 id="kernelcare-on-aws-–-デプロイユーザーガイド" tabindex="-1"><a class="header-anchor" href="#kernelcare-on-aws-–-デプロイユーザーガイド" aria-hidden="true">#</a> KernelCare on AWS – デプロイユーザーガイド</h3><h4 id="紹介資料" tabindex="-1"><a class="header-anchor" href="#紹介資料" aria-hidden="true">#</a> 紹介資料</h4><h4 id="概要-1" tabindex="-1"><a class="header-anchor" href="#概要-1" aria-hidden="true">#</a> 概要</h4><p>Linuxカーネルは、サーバー上で最も重要なソフトウェアです。Linuxカーネルにセキュリティ上の欠陥があると、すべてのサービスと顧客データが流出する可能性があります。KernelCareは、常時Linuxカーネルを自動的に安全に保つことを可能にするテクノロジーです。サーバーを停止する必要は決してありませんし、ダウンタイムやメンテナンスウィンドウの不便なスケジューリングが発生するサーバーの再起動もありません。これにより、可用性、安全性、安定性、運用コスト、顧客満足度が向上します。また、Linuxのほぼすべての主流ディストリビューションで動作します。シンプルで、高速で、デプロイするのが非常に簡単な一方、必要に応じて、非常に複雑なパッチやカスタマイズされたカーネルを処理することもできます。</p><h4 id="前提条件と要件" tabindex="-1"><a class="header-anchor" href="#前提条件と要件" aria-hidden="true">#</a> 前提条件と要件</h4><p>KernelCareをインストールできるのは、以下のいずれかのディストリビューションを実行しているx86_64互換サーバーまたはVMです。</p><ul><li>Amazon Linux 1、2</li><li>CentOS 6、7、Xen4CentOS、CentOS-Plus、ElRepo</li><li>CloudLinux 6、7</li><li>Debian 7、8、9、8-backports</li><li>Oracle Linux 6、7</li><li>ProxmoxVE 3、4、5</li><li>RedHat EL 6、7</li><li>Ubuntu 14.04、16.04、18.04</li><li>Virtuozzo 6</li></ul><p>互換性のあるカーネルの正確なリストは、以下のリンクにあります。<a href="https://patches.kernelcare.com/" target="_blank" rel="noopener noreferrer">https://patches.kernelcare.com/</a>.</p><p>カスタムカーネルがサポートされていない限り、ほとんどの場合、標準OSカーネルが必要です。</p><p>ソフトウェアは実行中のサーバーにインストールすることができ、再起動は必要ありません。</p><p>KernelCareをAWSにデプロイするには、基本的なLinuxのスキルがあれば十分です。単純なデプロイには、EC2インスタンスのみが必要です。KernelCareはBYOLモデルとしてご利用いただけます。試用ライセンスを取得するには、<a href="https://cln.cloudlinux.com" target="_blank" rel="noopener noreferrer">カスタマーポータル</a>で登録する必要があります。試用ライセンスを取得したら、アクティベーションキーを使って、実行中のEC2インスタンスを登録する必要があります。</p><h4 id="アーキテクチャ図" tabindex="-1"><a class="header-anchor" href="#アーキテクチャ図" aria-hidden="true">#</a> アーキテクチャ図</h4><p>サーバーがインターネットにアクセスできる限り、たとえNAT環境だとしても、問題なくKernelCareパッチサーバーを使用できます。</p><p>通常、KernelCareが適切に動作するためには、2台のサーバーのHTTPS接続が必要になります。</p><ul><li>cln.cloudlinux.com</li><li>patches.kernelcare.com</li></ul><p><img src="'+b+'" alt=""></p><p>サーバーがインターネットに直接アクセスはできないけれども、プロキシを使用してインターネットにアクセスできる場合、構成にそれほど違いはありません。KernelCareは、プロキシ用の標準環境変数を取得できます。</p><p><img src="'+g+`" alt=""></p><p>プロキシ設定用の環境設定があることを確認してください。それ以外はすべて、サーバーが直接インターネットに接続されている場合と同じになります。</p><div class="language-text line-numbers-mode" data-ext="text"><pre class="language-text"><code># export http_proxy=http://proxy.domain.com:port
# export https_proxy=http://proxy.domain.com:port
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div></div></div><h4 id="計画ガイダンス" tabindex="-1"><a class="header-anchor" href="#計画ガイダンス" aria-hidden="true">#</a> 計画ガイダンス</h4><h4 id="セキュリティ" tabindex="-1"><a class="header-anchor" href="#セキュリティ" aria-hidden="true">#</a> セキュリティ</h4><p>KernelCareデプロイをインストール／制御できるようにするのに必要なのは、SSHアクセスだけです（rootの認証情報、キーベースの認証／sudo、または同様のメカニズムが推奨されています）。</p><h4 id="費用" tabindex="-1"><a class="header-anchor" href="#費用" aria-hidden="true">#</a> 費用</h4><p>KernelCareは、サブスクリプションサービスとして提供されています。料金の詳細については、以下の表を参照してください。</p><table><thead><tr><th><strong>ライセンス数</strong></th><th><strong>月額</strong></th><th><strong>年額</strong></th></tr></thead><tbody><tr><td>1</td><td>$3.95</td><td>$45</td></tr><tr><td>2-49</td><td>$2.95</td><td>$33</td></tr><tr><td>50-499</td><td>$2.55</td><td>$28</td></tr><tr><td>500+</td><td>$2.25</td><td>$25</td></tr></tbody></table><h4 id="サイジング" tabindex="-1"><a class="header-anchor" href="#サイジング" aria-hidden="true">#</a> サイジング</h4><p>KernelCareエージェントのRAMフットプリントは微小です。バイナリパッチに必要なのは、通常1MB未満です。</p><h4 id="デプロイガイダンス" tabindex="-1"><a class="header-anchor" href="#デプロイガイダンス" aria-hidden="true">#</a> デプロイガイダンス</h4><h4 id="デプロイアセット" tabindex="-1"><a class="header-anchor" href="#デプロイアセット" aria-hidden="true">#</a> デプロイアセット</h4><p>KernelCareをインストールするには、以下を実行します。</p><div class="language-text line-numbers-mode" data-ext="text"><pre class="language-text"><code>curl -s -L https://kernelcare.com/installer | bash
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><p>または</p><div class="language-text line-numbers-mode" data-ext="text"><pre class="language-text"><code>wget -qq -O - https://kernelcare.com/installer | bash
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><p>IPベースのライセンスをご利用の場合は、他に何もする必要はありません。キーベースのライセンスをご利用の場合は、以下を実行します。</p><div class="language-text line-numbers-mode" data-ext="text"><pre class="language-text"><code>$ /usr/bin/kcarectl --register KEY
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><p><code>KEY</code>は、製品の購入または試用の申し込みの際に提供された登録キー文字列です。</p><p>Ansible、Puppet、Chef、またはその他の自動化ツールを使用して、KernelCareのデプロイを簡単に自動化することができます。自動化できる手順は、以下のとおりです。</p><ol><li>KernelCareエージェントパッケージ（オプション。インターネットにアクセスできないサーバーにのみ必要です）とKernelCareエージェント構成ファイル（<code>/etc/sysconfig/kcare/kcare.conf</code>）を配布します。</li><li>必要な環境変数を設定します（オプション）。</li><li>ローカルで利用可能なパッケージ、または中央のKernelCareダウンロード場所のどちらかから、KernelCareエージェントをインストールします。</li><li>ライセンスキーまたはIPベースのライセンスのどちらかを使用して、KernelCareを登録します。</li></ol><h4 id="運用ガイダンス" tabindex="-1"><a class="header-anchor" href="#運用ガイダンス" aria-hidden="true">#</a> 運用ガイダンス</h4><h4 id="ヘルスチェック" tabindex="-1"><a class="header-anchor" href="#ヘルスチェック" aria-hidden="true">#</a> ヘルスチェック</h4><p>KernelCareによって保護されたシステムは、 <a href="https://cln.cloudlinux.com" target="_blank" rel="noopener noreferrer">https://cln.cloudlinux.com</a>. で利用可能なCloudLinux Network（CLN）ポータルで監視することができます。登録済みのKernelCareインストールは、ライセンスキーによってグループ化されています。<span style="color:#E76930;">琥珀色</span>の「！」マークつきのカーネルには、最新のパッチがインストールされていません。</p><p><img src="`+x+`" alt=""></p><p>いずれの場合も、KernelCareで保護されたシステムで以下のコマンドを実行することによって、利用可能な最新のパッチが適用済みかどうかを確認できます。</p><div class="language-text line-numbers-mode" data-ext="text"><pre class="language-text"><code>$ /usr/bin/kcarectl --check
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><h4 id="バックアップとリカバリー" tabindex="-1"><a class="header-anchor" href="#バックアップとリカバリー" aria-hidden="true">#</a> バックアップとリカバリー</h4><p>KernelCareは何もデータも保存していないので、KernelCareをバックアップする必要はありません。KernelCareは、いつでも再インストールして、再登録することができます。KernelCareの構成ファイルを変更済みの場合に、構成ファイルをバックアップするには、<code>/etc/sysconfig/kcare/</code>フォルダをバックアップします。</p><h4 id="定期メンテナンス" tabindex="-1"><a class="header-anchor" href="#定期メンテナンス" aria-hidden="true">#</a> 定期メンテナンス</h4><p>KernelCareは、RPM／DEBパッケージ（Linuxディストリビューションによって異なります）にパッケージ化されていて、システムパッケージがアップデートされる度にアップデートされます。追加のメンテナンスは必要ありません。</p><h4 id="緊急メンテナンス" tabindex="-1"><a class="header-anchor" href="#緊急メンテナンス" aria-hidden="true">#</a> 緊急メンテナンス</h4><p>インスタンスの1つが劣化した場合、EBSやスナップショットに基づいて別のインスタンスを起動すると、KernelCareは以前と同様に動作し続けます。そのため、追加の作業は必要ありません。代わりに新しいサーバーをセットアップする場合は、新しいサーバーにKernelCareを再登録してください。パッチをアンインストールすることにした場合は、以下のコマンドを実行します。</p><div class="language-text line-numbers-mode" data-ext="text"><pre class="language-text"><code># kcarectl --unload
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><p>または、以下のコマンドを実行して、<em>kernelcare</em>パッケージを完全に削除します。</p><ul><li>RPMベースのシステムの場合<div class="language-text line-numbers-mode" data-ext="text"><pre class="language-text"><code># rpm -e kernelcare
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div></li></ul><p>または</p><ul><li>DEBベースのシステムの場合<div class="language-text line-numbers-mode" data-ext="text"><pre class="language-text"><code># dpkg --remove kernelcare
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div></li></ul><h4 id="パッチフィードの詳細オプション" tabindex="-1"><a class="header-anchor" href="#パッチフィードの詳細オプション" aria-hidden="true">#</a> パッチフィードの詳細オプション</h4><h5 id="テストフィードと遅延フィード" tabindex="-1"><a class="header-anchor" href="#テストフィードと遅延フィード" aria-hidden="true">#</a> <strong>テストフィードと遅延フィード</strong></h5><p>KernelCareパッチサーバーには、標準（本番）フィードに加えて、いくつかのパッチフィードが用意されています。</p><ul><li><strong>テストフィード</strong>: 完全なテスト工程を経ていない最新のパッチ（テストビルド）。テストフィードを使用すると、新しいパッチのテストを早期に開始することができます。</li><li><strong>遅延フィード</strong>: 過去12／24／48時間以内にリリースされたパッチのロードをスキップするように、KernelCareに指示がされます。</li></ul><p>代わりとなるフィードオプションは、<code>/etc/sysconfig/kcare/kcare.conf</code>の<code>PREFIX</code>変数をtest／<code>12h</code>／<code>24h</code>／<code>48h</code>のいずれかに設定することで有効になります。</p><h5 id="stickyパッチ機能によるフィード管理" tabindex="-1"><a class="header-anchor" href="#stickyパッチ機能によるフィード管理" aria-hidden="true">#</a> <strong>Stickyパッチ機能によるフィード管理</strong></h5><p>検証環境と本番環境を処理する最善の方法は、CloudLinux Network（CLN）ポータルから発行されたKernelCareライセンスキーのStickyタグ機能を使用することです。このタグを使用するには、CLNポータル→KernelCareタブ→対象のキーをクリック→「Edit Key」をクリック→キー情報編集ウィンドウに移動します。</p><p><img src="`+k+'" alt=""></p><p><img src="'+f+'" alt=""></p><p>各環境に個別のキーを提供し、全環境に特定のStickyタグを設定する必要があります。実は、Stickyタグは、環境内の全サーバーにパッチを適用しなければならない日付になっています。</p><p><img src="'+_+`" alt=""></p><p>「Sticky tag」フィールドの日付は、2018年5月28日から今日の1日前までの任意の日付にすることができます。</p><p>パッチを適用するサーバーでStickyタグ機能を使用するには、以下のコマンドを実行します。</p><div class="language-text line-numbers-mode" data-ext="text"><pre class="language-text"><code>$ /usr/bin/kcarectl --set-sticky-patch=KEY
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><p>または、<code>/etc/sysconfig/kcare/kcare.conf</code>ファイルに<code>STICKY_PATCH=KEY</code>を追加して、同じことをすることもできます。</p><div class="tip custom-block"><p class="custom-block-title">警告</p><p><code>KEY</code>という語を、サーバーを登録するのに使用される実際のKernelCareライセンスキーに置き換え<strong>ないでください</strong>。</p></div><p>特定のサーバーでStickyタグ機能が有効になっている場合、そのような全サーバーにおいて、「Sticky tag」フィールドで指定されている日付以前にリリースされたパッチのみを取得します。</p><p>このようにして、CLNポータルのフィールドを1つだけアップデートすることで、ある環境の（つまり、同じKernelCareライセンスキーで登録されている）全サーバーに新しいパッチを追加できます。</p><h4 id="サポート" tabindex="-1"><a class="header-anchor" href="#サポート" aria-hidden="true">#</a> サポート</h4><p>24時間、週7日、年365日、無制限のサポートを提供しています。<a href="https://cloudlinux.zendesk.com/hc/requests/new" target="_blank" rel="noopener noreferrer">リクエストを送信する</a>か、Eメールで <a href="mailto:support@cloudlinux.com">support@cloudlinux.com</a>までお問い合わせください。</p><ul><li>全てのお問い合わせに、1営業日以内に回答いたします。ほとんどの場合、数時間以内です。迅速なサポートをご希望の場合は、サーバーで（rootユーザーとして）以下のコマンドを実行します。</li></ul><div class="language-text line-numbers-mode" data-ext="text"><pre class="language-text"><code># kcarectl --doctor
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><p>次に、生成されたキーをサポートリクエストに貼り付けます。</p><h4 id="サポート費用" tabindex="-1"><a class="header-anchor" href="#サポート費用" aria-hidden="true">#</a> サポート費用</h4><p>KernelCareサブスクリプションには、24時間年中無休の無料サポートが含まれています。</p><h4 id="アクセシビリティ" tabindex="-1"><a class="header-anchor" href="#アクセシビリティ" aria-hidden="true">#</a> アクセシビリティ</h4><h4 id="参考資料" tabindex="-1"><a class="header-anchor" href="#参考資料" aria-hidden="true">#</a> 参考資料</h4><ul><li>KernelCare Webサイト：<a href="https://www.kernelcare.com" target="_blank" rel="noopener noreferrer">https://www.kernelcare.com</a></li><li>KernelCareブログ： <a href="https://www.kernelcare.com/blog/" target="_blank" rel="noopener noreferrer">https://www.kernelcare.com/blog/</a></li><li>KernelCareパッチサーバー： <a href="https://patches.kernelcare.com" target="_blank" rel="noopener noreferrer">https://patches.kernelcare.com</a></li><li>CloudLinux Network – CLN（請求ポータル）: <a href="https://cln.cloudlinux.com" target="_blank" rel="noopener noreferrer">https://cln.cloudlinux.com</a></li><li>CloudLinux 24時間年中無休オンラインサポートシステム： <a href="https://tuxcare.zendesk.com" target="_blank" rel="noopener noreferrer">https://tuxcare.zendesk.com</a></li></ul><h4 id="ローカリゼーション" tabindex="-1"><a class="header-anchor" href="#ローカリゼーション" aria-hidden="true">#</a> ローカリゼーション</h4><p>KernelCareは、英語でのみご利用いただけます。</p><h3 id="リセラーパートナーui" tabindex="-1"><a class="header-anchor" href="#リセラーパートナーui" aria-hidden="true">#</a> リセラーパートナーUI</h3><p>リセラーパートナーのアクセス権を取得したら、IPリセラーパートナーUIにて、IPライセンス、請求オプション、プロフィールの詳細を閲覧、管理できます。ここでは、残高、ライセンス数、ライセンス価格を追跡できるだけでなく、IPアドレス検索を使用して顧客を見つけることもできます。KernelCareライセンスの詳細については、<a href="https://www.kernelcare.com/pricing/" target="_blank" rel="noopener noreferrer">こちら</a>を参照してください。</p><h4 id="サーバー欄" tabindex="-1"><a class="header-anchor" href="#サーバー欄" aria-hidden="true">#</a> サーバー欄</h4><p>アカウントに資金を追加する（以下の<strong>請求情報／資金の追加</strong>を参照してください）と、すぐにクライアント用の新しいライセンスを追加できます。IP KernelCareライセンスを追加するには、</p><ol><li><strong>Add IP License</strong>フィールドにIPアドレスを入力し、プルダウンメニュー（KernelCare）でライセンスの種類を選択して、<strong>Add license</strong>をクリックします。</li></ol><p><img src="`+C+'" alt=""></p><ol start="2"><li><p>ライセンスを削除するには、削除が必要なIPアドレスの前にある<strong>Delete</strong> をクリックします。</p></li><li><p>KernelCare Keyライセンスを追加するには、<strong>KernelCare Keys</strong>タブに移動し、<strong>Max Servers</strong>にライセンスで許可されているサーバー数を入力し、必要に応じて説明を追加して、<strong>Add</strong>をクリックします。キーが生成され、下にあるリストに表示されます。</p></li></ol><p><strong>Operations List</strong>では、キーを編集または削除できます。</p><p><img src="'+y+'" alt=""></p><h4 id="請求情報-資金の追加" tabindex="-1"><a class="header-anchor" href="#請求情報-資金の追加" aria-hidden="true">#</a> 請求情報／資金の追加</h4><p>資金を追加するには、</p><ol><li><p>残高の近くにある<strong>Add Funds</strong>をクリックするか、アカウントの開始ページの上部にある<strong>Billing Info/Add Funds</strong>に移動します。</p></li><li><p>まず、<strong>Add</strong>をクリックして、クレジットカードの詳細を追加します。次に、金額を入力して<strong>TopUp</strong>をクリックします。<strong>Process to Checkout</strong>をクリックして、PayPalで支払うこともできます。</p></li></ol><p><img src="'+K+'" alt=""></p><p>クレジットカードの詳細を追加する際に、<strong>Auto add funds</strong>オプションを選択することもできます。残高が100ドルを下回ると、プルダウンメニューで選択した金額が自動的に追加されます。</p><p><strong>Auto repay</strong>を選択すると、残高がマイナスになるときに、カードに自動的に請求されます。最低請求金額は20ドルです（たとえば、残高が15ドルの場合、20ドルが請求されます。残高が134.2ドルの場合、134.2ドルが請求されます）。</p><p><img src="'+E+'" alt=""></p><div class="tip custom-block"><p class="custom-block-title">注</p><p>残高がマイナスで表示されている場合は、さらに資金を入金する必要があることを意味しています。</p></div><h4 id="api欄" tabindex="-1"><a class="header-anchor" href="#api欄" aria-hidden="true">#</a> API欄</h4><p>CloudLinuxとKernelCareのIPライセンスの追加・削除は、さまざまなホスティング・ドメイン管理や請求システム・プラットフォームと互換性があります。API欄では、可能なすべてのCloudLinuxモジュールとプラグインAPIに関する包括的な情報を見つけることができます。</p><p><img src="'+S+'" alt=""></p><h4 id="プロフィール" tabindex="-1"><a class="header-anchor" href="#プロフィール" aria-hidden="true">#</a> プロフィール</h4><p><strong>Profile</strong>欄をクリックして、プロフィール情報を編集できます。必要な情報を編集し、<strong>Update Account</strong>をクリックしてください。</p><p><img src="'+w+'" alt=""><img src="'+P+`" alt=""></p><h3 id="方法" tabindex="-1"><a class="header-anchor" href="#方法" aria-hidden="true">#</a> 方法</h3><h4 id="再起動せずにハイパースレッディング-smt-を無効にする方法-kernelcareの場合" tabindex="-1"><a class="header-anchor" href="#再起動せずにハイパースレッディング-smt-を無効にする方法-kernelcareの場合" aria-hidden="true">#</a> 再起動せずにハイパースレッディング（SMT）を無効にする方法：KernelCareの場合</h4><p>この記事では、最近のMDS／Zombieloadの脆弱性を軽減するのに役立つように、KernelCareを使用して再起動せずにSMT（同時マルチスレッディング）を無効または有効にする方法について説明します。</p><p>CPU同時マルチスレッディング（SMT）の無効化は、最近のMDSの脆弱性（別称、「Zombieload」）に対抗するために必要な緩和策の1つです。ホスティングプラットフォームの構成とそのワークロードパターンによって、パフォーマンスに影響があります。専用コアをゲスト（例えば、VM）に割り当てるなど、その他の緩和策の影響も考慮する必要があります。</p><p>カーネルの<code>sysfs</code>インターフェイスを使用して、SMTの状態を制御および取得できます。2つのファイルがありますが、両方とも<code>/sys/devices/system/cpu/smt</code>ディレクトリにあります。</p><ul><li><code>control</code></li><li><code>active</code></li></ul><p><code>/sys/devices/system/cpu/smt</code>ディレクトリが見つからない場合、実行中のカーネルがSMTをサポートしていないことを意味します。この場合、KernelCareパッチを適用して、システムがSMTコントロールを使用できるようにする必要があります。以下の<code>kcarectrl</code>コマンドを使用してください。</p><div class="language-text line-numbers-mode" data-ext="text"><pre class="language-text"><code>kcarectl --update
Kernel is safe
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div></div></div><div class="language-text line-numbers-mode" data-ext="text"><pre class="language-text"><code>ls -l /sys/devices/system/cpu/smt
-r--r--r-- 1 root root 4096 May 17 13:06 active
-rw-r--r-- 1 root root 4096 May 17 13:06 control
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>これらのファイルが配置されるとすぐに、SMTの無効化を進めることができます。</p>`,188),Ie=e("iframe",{width:"560",height:"315",src:"https://www.youtube.com/embed/RUGCvEO1hAE",frameborder:"0",allow:"accelerometer; autoplay; encrypted-media; gyroscope; picture-in-picture",allowfullscreen:""},null,-1),De=i(`<h4 id="smtコントロール" tabindex="-1"><a class="header-anchor" href="#smtコントロール" aria-hidden="true">#</a> SMTコントロール</h4><p><code>/sys/devices/system/cpu/smt/control</code></p><p>このファイルを使用すると、SMTを有効または無効にして、その状態を表示できます。以下の3つの値があります。</p><ol><li><code>on</code>：CPUがSMTをサポートしており、SMTが有効になっています。すべての論理CPUは、制限なくオフラインまたはオンラインにすることができます。</li><li><code>off</code>：CPUはSMTをサポートしていますが、SMTが無効になっています。いわゆるプライマリーSMTスレッドのみが、制限なしでオフライン／オンラインにできます。非プライマリーシブリングスレッドをオンラインにしようとすると、拒否されます。</li><li><code>notsupported</code>：CPUがSMTをサポートしていません。コントロールファイルに書き込むことはできません。</li></ol><h4 id="smtステータス" tabindex="-1"><a class="header-anchor" href="#smtステータス" aria-hidden="true">#</a> SMTステータス</h4><p><code>/sys/devices/system/cpu/smt/active</code></p><p>このファイルの内容は、SMTのステータスを示しています（たとえば、2つ以上のシブリングスレッドが同じ物理コアでアクティブな場合、このファイルの内容は 1、そうでない場合は0になります）。</p><p>SMTサポートを制御するためのコマンドは、以下になります（ルート権限が必要です）。</p><h4 id="smtの状態を確認する" tabindex="-1"><a class="header-anchor" href="#smtの状態を確認する" aria-hidden="true">#</a> SMTの状態を確認する</h4><div class="language-text line-numbers-mode" data-ext="text"><pre class="language-text"><code>cat /sys/devices/system/cpu/smt/active
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><h4 id="smtを有効にする" tabindex="-1"><a class="header-anchor" href="#smtを有効にする" aria-hidden="true">#</a> SMTを有効にする</h4><div class="language-text line-numbers-mode" data-ext="text"><pre class="language-text"><code>echo on &gt; /sys/devices/system/cpu/smt/control
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><h4 id="smtを無効にする" tabindex="-1"><a class="header-anchor" href="#smtを無効にする" aria-hidden="true">#</a> SMTを無効にする</h4><div class="language-text line-numbers-mode" data-ext="text"><pre class="language-text"><code>echo off &gt; /sys/devices/system/cpu/smt/control
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div>`,14),Ue=i(`<h4 id="ベンダー提供のパッケージで再起動せずにマイクロコードをアップデートする方法" tabindex="-1"><a class="header-anchor" href="#ベンダー提供のパッケージで再起動せずにマイクロコードをアップデートする方法" aria-hidden="true">#</a> ベンダー提供のパッケージで再起動せずにマイクロコードをアップデートする方法</h4><p>この記事では、Linuxを実行しているIntel CPUのマイクロコードをアップデートする方法を解説します。</p><div class="warning custom-block"><p class="custom-block-title">警告</p><p>マイクロコードのアップデートで発生する可能性のある問題を回避するには、アップデート前にSMTを有効にしてください。</p></div><div class="tip custom-block"><p class="custom-block-title">注</p><p>この記事は変更される可能性があります。他のディストリビューション向けの説明を追加して、更新される予定です。</p></div><div class="tip custom-block"><p class="custom-block-title">注</p><ul><li>以下の手順はrootとして実行する必要があります。</li><li>示されている例は、Debian向けです。</li><li>システムがCPUやカーネル関連の脆弱性から完全に保護されているか疑問がある場合は、<a href="mailto:sales@cloudlinux.com">お問い合わせください</a>。</li></ul></div><h4 id="ubuntuとdebianでのマイクロコードのアップデート" tabindex="-1"><a class="header-anchor" href="#ubuntuとdebianでのマイクロコードのアップデート" aria-hidden="true">#</a> UbuntuとDebianでのマイクロコードのアップデート</h4><ol><li><p>ご利用のプラットフォームのマイクロコードパッケージダウンロードリンクを見つけます</p><ul><li>Ubuntu: <a href="https://usn.ubuntu.com/3977-1/" target="_blank" rel="noopener noreferrer">https://usn.ubuntu.com/3977-1/</a></li><li>Debian: <a href="https://packages.debian.org/search?keywords=intel-microcode" target="_blank" rel="noopener noreferrer">https://packages.debian.org/search?keywords=intel-microcode</a></li></ul></li><li><p>パッケージをダウンロードします</p></li></ol><div class="tip custom-block"><p class="custom-block-title">注</p><p>以下に示されている例は、Debian 9用です。</p></div><div class="language-text line-numbers-mode" data-ext="text"><pre class="language-text"><code>cd &lt;a temporary directory, e.g. /tmp&gt;
mkdir firmware
cd firmware
wget http://security.debian.org/debian-security/pool/updates/non-free/i/intel-microcode/intel-microcode_3.20190514.1~deb9u1_amd64.deb
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><ol start="3"><li>ダウンロードしたパッケージを確認します</li></ol><div class="language-text line-numbers-mode" data-ext="text"><pre class="language-text"><code>md5sum intel-microcode_3.20190514.1~deb9u1_amd64.deb
c7bc9728634137453e0f4821fb6bb436  intel-microcode_3.20190514.1~deb9u1_amd64.deb
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div></div></div><p>チェックサムのリストは、<a href="https://packages.debian.org/stretch/amd64/intel-microcode/download" target="_blank" rel="noopener noreferrer">Debianパッケージダウンロードページ</a>にあります。</p><ol start="4"><li>パッケージを展開します</li></ol><div class="language-text line-numbers-mode" data-ext="text"><pre class="language-text"><code>dpkg -x intel-microcode_3.20190514.1~deb9u1_amd64.deb
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><ol start="5"><li>展開したファイルを確認します</li></ol><div class="language-text line-numbers-mode" data-ext="text"><pre class="language-text"><code>ls -l
total 1896
drwxr-xr-x 5 root root   53 May 15 04:18 etc
-rw-r--r-- 1 root root 1940140 May 17 11:42 intel-microcode_3.20190514.1~deb9u1_amd64.deb
drwxr-xr-x 3 root root   22 May 15 04:18 lib
drwxr-xr-x 3 root root   19 May 15 04:18 usr
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><ol start="6"><li>既存のマイクロコードのバックアップを作成します</li></ol><div class="language-text line-numbers-mode" data-ext="text"><pre class="language-text"><code>test -d /lib/firmware/intel-ucode/ &amp;&amp; mv /lib/firmware/intel-ucode/ /lib/firmware/intel-ucode.backup
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><ol start="7"><li>新しいマイクロコードをコピーして、確認します</li></ol><div class="language-text line-numbers-mode" data-ext="text"><pre class="language-text"><code>cp -r lib/firmware/intel-ucode/ /lib/firmware/
ls -l /lib/firmware/ | grep intel-ucode
drwxr-xr-x  2 root root 4096 May 17 11:47 intel-ucode
drwxr-xr-x  2 root root 4096 May 16 20:54 intel-ucode.backup
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><ol start="8"><li>現在のマイクロコードのバージョンを確認します</li></ol><div class="language-text line-numbers-mode" data-ext="text"><pre class="language-text"><code>dmesg | grep microcode
[ 2.254717] microcode: sig=0x306a9, pf=0x10, revision=0x12
[ 2.254820] microcode: Microcode Update Driver: v2.01 &lt;tigran@aivazian.fsnet.co.uk&gt;, Peter Oruba
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><ol start="9"><li>(（オプション）現在のマイクロコードのバージョン（コアごとのリビジョン）を再確認します</li></ol><div class="language-text line-numbers-mode" data-ext="text"><pre class="language-text"><code>cat /proc/cpuinfo | grep -e microcode
microcode : 0x12
microcode : 0x12
microcode : 0x12
microcode : 0x12
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><ol start="10"><li>マイクロコードリロードファイルが存在することを確認します</li></ol><div class="language-text line-numbers-mode" data-ext="text"><pre class="language-text"><code>ls -l /sys/devices/system/cpu/microcode/reload
--w------- 1 root root 4096 May 17 11:54 /sys/devices/system/cpu/microcode/reload
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div></div></div><ol start="11"><li>カーネルに新しいマイクロコードを強制的にロードさせます</li></ol><div class="language-text line-numbers-mode" data-ext="text"><pre class="language-text"><code>echo 1 &gt; /sys/devices/system/cpu/microcode/reload
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><ol start="12"><li>新しいマイクロコードを確認します</li></ol><div class="language-text line-numbers-mode" data-ext="text"><pre class="language-text"><code>dmesg | grep microcode
[ 2.254717] microcode: sig=0x306a9, pf=0x10, revision=0x12
[ 2.254820] microcode: Microcode Update Driver: v2.01 &lt;tigran@aivazian.fsnet.co.uk&gt;, Peter Oruba
[ 1483.494573] platform microcode: firmware: direct-loading firmware intel-ucode/06-3a-09
[ 1483.495985] microcode: updated to revision 0x21, date = 2019-02-13
[ 1483.496012] platform microcode: firmware: direct-loading firmware intel-ucode/06-3a-09
[ 1483.496698] platform microcode: firmware: direct-loading firmware intel-ucode/06-3a-09
[ 1483.497391] platform microcode: firmware: direct-loading firmware intel-ucode/06-3a-09
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><ol start="13"><li>（オプション）新しいマイクロコードのバージョン（コアごとのリビジョン）を再確認します</li></ol><div class="language-text line-numbers-mode" data-ext="text"><pre class="language-text"><code>cat /proc/cpuinfo | grep -e microcode
microcode : 0x21
microcode : 0x21
microcode : 0x21
microcode : 0x21
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h4 id="red-hatとcentos-でのマイクロコードのアップデート" tabindex="-1"><a class="header-anchor" href="#red-hatとcentos-でのマイクロコードのアップデート" aria-hidden="true">#</a> Red HatとCentOS でのマイクロコードのアップデート</h4><p>RHELベースのディストリビューションには、マイクロコードをアップデートするのに、<code>microcode_ctl utility</code>を使用できます。</p><ol><li><code>microcode_ctl</code>パッケージをアップデートして、最新のマイクロコードを取得します</li></ol><div class="language-text line-numbers-mode" data-ext="text"><pre class="language-text"><code>yum update microcode_ctl
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><ol start="2"><li>forceファイルを作成します</li></ol><p>ファームウェアディレクトリ内に、<code>force-late-intel–06–4f–01</code>を作成します。</p><div class="language-text line-numbers-mode" data-ext="text"><pre class="language-text"><code>touch /lib/firmware/\`uname -r\`/force-late-intel-06-4f-01
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><ol start="3"><li>マイクロコードのアップデートを実行します</li></ol><div class="language-text line-numbers-mode" data-ext="text"><pre class="language-text"><code>/usr/libexec/microcode_ctl/update_ucode
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><ol start="4"><li>カーネルに新しいマイクロコードを強制的にロードさせます</li></ol><div class="language-text line-numbers-mode" data-ext="text"><pre class="language-text"><code>echo 1 &gt; /sys/devices/system/cpu/microcode/reload
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><ol start="5"><li>新しいマイクロコードを確認します</li></ol><div class="language-text line-numbers-mode" data-ext="text"><pre class="language-text"><code>dmesg | grep microcode
[ 2.254717] microcode: sig=0x306a9, pf=0x10, revision=0x12
[ 2.254820] microcode: Microcode Update Driver: v2.01 &lt;tigran@aivazian.fsnet.co.uk&gt;, Peter Oruba
[ 1483.494573] platform microcode: firmware: direct-loading firmware intel-ucode/06-3a-09
[ 1483.495985] microcode: updated to revision 0x21, date = 2019-02-13
[ 1483.496012] platform microcode: firmware: direct-loading firmware intel-ucode/06-3a-09
[ 1483.496698] platform microcode: firmware: direct-loading firmware intel-ucode/06-3a-09
[ 1483.497391] platform microcode: firmware: direct-loading firmware intel-ucode/06-3a-09
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><ol start="6"><li>（オプション）新しいマイクロコードのバージョン（コアごとのリビジョン）を再確認します</li></ol><div class="language-text line-numbers-mode" data-ext="text"><pre class="language-text"><code>cat /proc/cpuinfo | grep -e microcode
microcode : 0x21
microcode : 0x21
microcode : 0x21
microcode : 0x21
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h4 id="centos-6でのマイクロコードのアップデート" tabindex="-1"><a class="header-anchor" href="#centos-6でのマイクロコードのアップデート" aria-hidden="true">#</a> CentOS 6でのマイクロコードのアップデート</h4><ol><li><code>microcode_ctl</code>パッケージをアップデートして、最新のマイクロコードを取得します</li></ol><div class="language-text line-numbers-mode" data-ext="text"><pre class="language-text"><code>yum update microcode_ctl
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><ol start="2"><li><code>yum update microcode_ctl</code>が以下を出力する場合、</li></ol><div class="language-text line-numbers-mode" data-ext="text"><pre class="language-text"><code>Package(s) microcode_ctl available, but not installed.
No Packages marked for Update
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div></div></div><p>手動でパッケージをインストールする必要があります。</p><ol start="3"><li><code>microcode_ctl</code>パッケージをインストールするには、以下のコマンドを実行します。</li></ol><div class="language-text line-numbers-mode" data-ext="text"><pre class="language-text"><code>yum install microcode_ctl
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><p>以下のようなコマンドが出力されます。</p><div class="language-text line-numbers-mode" data-ext="text"><pre class="language-text"><code>Installed:
  microcode_ctl.x86_64 2:1.17-33.11.el6_10                                                                                                                                 

Complete!
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><ol start="4"><li>CPUマイクロコードのバージョンを確認します。</li></ol><div class="language-text line-numbers-mode" data-ext="text"><pre class="language-text"><code>cat /proc/cpuinfo | grep microcode
microcode       : 9
microcode       : 9
microcode       : 9
microcode       : 9
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><ol start="5"><li>マイクロコードのアップデートを試みます</li></ol><div class="language-text line-numbers-mode" data-ext="text"><pre class="language-text"><code>microcode_ctl -u
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><p>以下のような出力が表示された場合</p><div class="language-text line-numbers-mode" data-ext="text"><pre class="language-text"><code>microcode_ctl: writing microcode (length: 2370560)
microcode_ctl: cannot open /dev/cpu/microcode for writing errno=2 (No such file or directory)
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div></div></div><p>マイクロコードドライバをロードする必要があります。</p><ol start="6"><li>マイクロコードドライバをロードします</li></ol><div class="language-text line-numbers-mode" data-ext="text"><pre class="language-text"><code>modprobe microcode
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><ol start="7"><li>もう一度マイクロコードのアップデートを試みてください。</li></ol><div class="language-text line-numbers-mode" data-ext="text"><pre class="language-text"><code>microcode_ctl -u
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><p>以下のような出力が表示された場合、</p><div class="language-text line-numbers-mode" data-ext="text"><pre class="language-text"><code>microcode_ctl: writing microcode (length: 2370560)
microcode_ctl: microcode successfully written to /dev/cpu/microcode
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div></div></div><p>アップデートは成功です。</p><ol start="8"><li>バージョンを確認します。</li></ol><div class="language-text line-numbers-mode" data-ext="text"><pre class="language-text"><code>cat /proc/cpuinfo | grep microcode
microcode       : 17
microcode       : 17
microcode       : 17
microcode       : 17
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div>`,73),Ne=e("iframe",{width:"560",height:"315",src:"https://www.youtube.com/embed/EydWy-b9uns",frameborder:"0",allow:"accelerometer; autoplay; encrypted-media; gyroscope; picture-in-picture",allowfullscreen:""},null,-1),Ye=i('<h4 id="plesk関連" tabindex="-1"><a class="header-anchor" href="#plesk関連" aria-hidden="true">#</a> Plesk関連</h4><h4 id="拡張pleskライセンスからkernelcareアクティベーションキーを取得する方法" tabindex="-1"><a class="header-anchor" href="#拡張pleskライセンスからkernelcareアクティベーションキーを取得する方法" aria-hidden="true">#</a> 拡張PleskライセンスからKernelCareアクティベーションキーを取得する方法</h4><p>多くの場合、お客様はPleskまたはOdinを通してKernelCareライセンスを購入します。そのような場合、KernelCareライセンスと、Pleskプラグイン用のその他の追加キーが含まれているユニバーサルキーを取得することになります。このキーは、<code>A00B00-0CDE00-F0G000-HIGK00-LM0N00</code>のようなシンタックスです。最初に、Pleskを通して自動的にキーがインストールされ、次に、ライセンスが正常にアクティベートされます。</p><p>ただし、何らかの理由でエージェントを再登録する必要がある場合や、単にKernelCareアクティベーションキーを別途取得する必要がある場合は、上記の方法を適用することはできません。当社が、KernelCareサービスを別途処理する必要があります。</p><p>拡張PleskライセンスキーからKernelCareアクティベーションキーを取得するには、以下の手順に進む必要があります。</p><ol><li>以下の順に移動します。 <em>Tools &amp; Settings &gt;&gt; Plesk &gt;&gt; License Management &gt;&gt; Additional License Keys</em></li></ol><p><img src="'+L+'" alt=""></p><p><img src="'+T+`" alt=""></p><ol start="2"><li><p>ページに記載されているKernelCareライセンスの隣にある<em>Download key</em>をクリックし、テキストエディタでダウンロードしたファイルを開きます</p></li><li><p>以下のコードを見つけます</p></li></ol><div class="language-text line-numbers-mode" data-ext="text"><pre class="language-text"><code>&lt;!--Key body--&gt;
&lt;aps-3:key-body core:encoding=&quot;base64&quot; core:type=&quot;binary&quot;&gt;YOUR_BASE64_ENCODED_LICENSE_KEY==&lt;/aps-3:key-body&gt;
&lt;!--Information about additional key--&gt;
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><ol start="4"><li><p>これはbase64でエンコードされたキーなので、CLIユーティリティやオンラインのbase64デコーダー（例えば、 <a href="https://www.base64decode.org" target="_blank" rel="noopener noreferrer">https://www.base64decode.org</a> ）を使用して、UTF-8にデコードする必要があります。新しいライセンスキーは、xxxxxxxxxxxxxxxxのようなフォーマットのはずです。大文字と小文字の英字および数字が含まれています。</p></li><li><p>サービスを有効にするには、デコードされた新しいキーを使用します。</p></li></ol><div class="language-text line-numbers-mode" data-ext="text"><pre class="language-text"><code>/usr/bin/kcarectl --register DECODED_KEY_HERE
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><p>以上です！</p><h2 id="libcare" tabindex="-1"><a class="header-anchor" href="#libcare" aria-hidden="true">#</a> LibCare</h2><p>LibCare（旧KernelCare+）は、メモリ上の共有ライブラリを検出して、アップデートします。共有ライブラリを使用中のアプリケーションが、中断されることはありません。</p><h3 id="概要-2" tabindex="-1"><a class="header-anchor" href="#概要-2" aria-hidden="true">#</a> 概要</h3><p>LibCareは、共有ライブラリ向けパッチ適用ツールです。ライブラリ関連の脆弱性を検出し、再起動することなしにメモリ内のライブラリファイルにパッチを適用します。</p><h3 id="メリット-1" tabindex="-1"><a class="header-anchor" href="#メリット-1" aria-hidden="true">#</a> メリット</h3><p>今日、多くの組織では、サーバーとアプリケーションの再起動に必要なメンテナンスウィンドウの承認を得るのが、非常に困難です。現在、GlibcとOpenSSLのライブラリを共有する単一のサーバーで、複数のアプリケーションが実行されています。</p><p>再起動することなしに手動でパッチを適用した場合でも、共有ライブラリに脆弱性がある可能性があります。ライブラリがディスク上でアップデートされると、パッチ未適用の古いファイルがサーバーのメモリ上に残る場合があります。さらに、メモリ内のこの古いパッチ未適用のライブラリファイルは、脆弱性スキャナによって検出されません。LibCareを使用すると、ローカルサーバーライブラリは、熟知した攻撃者と脆弱性から完全に保護されます。</p><h3 id="主な機能-1" tabindex="-1"><a class="header-anchor" href="#主な機能-1" aria-hidden="true">#</a> 主な機能</h3><ul><li>再起動不要のライブラリパッチ適用</li><li>アプリケーションの再起動を回避</li><li>OpenSSLとGlibcをサポート</li></ul><h3 id="試用ライセンスの取得-1" tabindex="-1"><a class="header-anchor" href="#試用ライセンスの取得-1" aria-hidden="true">#</a> 試用ライセンスの取得</h3><p>KernelCare Enterpriseのご利用には、試用版アクティベーションキーが必要です。試用ライセンスは7日間有効です。</p><p>アクティベーションキーの取得に問題がある場合や試用版の使用に関してご不明点がある場合は、 <a href="mailto:sales@cloudlinux.com">sales@cloudlinux.com</a> までご連絡ください。私たちがお助けします。</p><h3 id="サポートされているオペレーティングシステム" tabindex="-1"><a class="header-anchor" href="#サポートされているオペレーティングシステム" aria-hidden="true">#</a> サポートされているオペレーティングシステム</h3><p>LibCareのパッチ適用は、現在、以下のオペレーティングシステムで利用できます。</p><ul><li>CentOS/RHEL/CloudLinux OS 7</li><li>CloudLinux OS 8</li><li>AlmaLinux 8</li><li>Oracle Linux 7</li><li>Oracle Linux 8</li><li>Debian 9/10</li><li>Ubuntu 16.04/18.04/20.04</li><li>Proxmox VE 6</li><li>Scientific Linux</li></ul><h3 id="インストールとアップグレード" tabindex="-1"><a class="header-anchor" href="#インストールとアップグレード" aria-hidden="true">#</a> インストールとアップグレード</h3><p>ユーザー空間プロセスのパッチ適用機能は、KernelCareパッケージで利用できます。</p><h3 id="使用方法-1" tabindex="-1"><a class="header-anchor" href="#使用方法-1" aria-hidden="true">#</a> 使用方法</h3><p>利用可能なパッチをすべてのユーザー空間プロセスに適用するには、以下のコマンドを実行します。</p><div class="language-text line-numbers-mode" data-ext="text"><pre class="language-text"><code>$ kcarectl --lib-update
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><p>どのプロセスにパッチが適用されたかに関する情報を収集するには、以下のコマンドを実行します。</p><div class="language-text line-numbers-mode" data-ext="text"><pre class="language-text"><code>$ kcarectl --lib-info
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><p>適用済みのパッチに関する情報を収集するには、以下のコマンドを実行します。</p><div class="language-text line-numbers-mode" data-ext="text"><pre class="language-text"><code>$ kcarectl --lib-patch-info
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><p>関連するすべてのプロセスのパッチを解除するには、以下のコマンドを実行します。</p><div class="language-text line-numbers-mode" data-ext="text"><pre class="language-text"><code>$ kcarectl --lib-unload
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><h4 id="ブラックリスト作成" tabindex="-1"><a class="header-anchor" href="#ブラックリスト作成" aria-hidden="true">#</a> ブラックリスト作成</h4><p>特定のプロセスへのパッチ適用を回避する必要がある場合は、ブラックリストを定義することによって行うことができます。デフォルトのブラックリストは、<code>/var/lib/libcare/blacklist</code>にあり、パッケージが提供したリストが含まれています。優先度の高い<code>/var/cache/kcare/userspace/blacklist</code>ファイルを作成することで、それらの値を上書きできます。</p><h4 id="自動アップデート" tabindex="-1"><a class="header-anchor" href="#自動アップデート" aria-hidden="true">#</a> 自動アップデート</h4><p>ユーザー空間パッチ適用cronジョブは、デフォルトでは無効です。有効にするには、以下のコマンドを実行してください。</p><div class="language-text line-numbers-mode" data-ext="text"><pre class="language-text"><code>libcare-cron init
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><h3 id="トラブルシューティング" tabindex="-1"><a class="header-anchor" href="#トラブルシューティング" aria-hidden="true">#</a> トラブルシューティング</h3><h4 id="auditdログ" tabindex="-1"><a class="header-anchor" href="#auditdログ" aria-hidden="true">#</a> Auditdログ</h4><p>LibCareツールでは、ptraceシステムコールを多用しています。<code>auditd</code>トレースが呼び出される場合、ログに多数のレコードが記録されます。<code>/etc/audit/rules.d/kernelcare.rules</code>に、KernelCareパッケージによって提供されたルールがあり、これによって、監査からKernelCareプロセスが除外されます。</p><p>注：古いautditdの制限により、el6にはそのようなルールが提供されていません。そのようなルールを実行時に追加する以下のようなコマンドがあります。</p><div class="language-text line-numbers-mode" data-ext="text"><pre class="language-text"><code>auditctl -l | grep kcare | cut -d&#39; &#39; -f2- | xargs -t -L1 -r auditctl -d &amp;&amp; pgrep libcare-server | xargs -t -n1 -i auditctl -A exit,never -F arch=b64 -S ptrace -F pid=&quot;{}&quot; -k kcarever | xargs -t -n1 -i auditctl -A exit,never -F arch=b64 -S ptrace -F pid=&quot;{}&quot; -k kcare
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><p>これにより、現在有効になっているすべてのKernelCareルールが削除され、LibCareのプロセスIDによって新しいルールが追加されます。</p><h3 id="パッチ未適用ライブラリディテクター-uchecker" tabindex="-1"><a class="header-anchor" href="#パッチ未適用ライブラリディテクター-uchecker" aria-hidden="true">#</a> パッチ未適用ライブラリディテクター（UChecker）</h3><h4 id="説明" tabindex="-1"><a class="header-anchor" href="#説明" aria-hidden="true">#</a> 説明</h4><p>UCheckerは、ネットワークLinuxサーバーを確認し、ディスクとメモリの両方で古いライブラリを検出するスキャナーです。KernelCareのオープンソーススキャナーは、他のスキャナーによってアップデート済みと報告される可能性のある、メモリ上で実行されている脆弱なライブラリを正しく報告することで、検知漏れを検出します。</p><p>UChecker（「ユーザー空間チェッカー」に由来します）は、最新のすべてのLinuxディストリビューションで動作します。UCheckerは、無料のオープンソースで、GNU一般公衆ライセンスに基づいて配布されています。</p><h4 id="ucheckerの仕組み" tabindex="-1"><a class="header-anchor" href="#ucheckerの仕組み" aria-hidden="true">#</a> UCheckerの仕組み</h4><p>このアクティビティ図は、どのようにUCheckerが動作するかを示しています。</p><p><img src="`+M+`" alt=""></p><h4 id="使用方法-2" tabindex="-1"><a class="header-anchor" href="#使用方法-2" aria-hidden="true">#</a> 使用方法</h4><p>システムをスキャンするには、以下のコマンドを実行します。</p><div class="language-text line-numbers-mode" data-ext="text"><pre class="language-text"><code>$ curl -s -L https://kernelcare.com/uchecker | sudo python
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><p>以下の出力が表示されます。</p><div class="language-text line-numbers-mode" data-ext="text"><pre class="language-text"><code>[*] Process httpd[15516] linked to the \`libc-2.17.so\` that is not up to date.

You may want to update libraries above and restart corresponding processes.

KernelCare+ allows to resolve such issues with no process downtime. To find 
out more, please, visit https://lp.kernelcare.com/kernelcare-early-access?
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>出力では、以下の情報が利用できます。</p><ul><li>プロセスID</li><li>プロセス名</li></ul><h4 id="トラブルシューティング-1" tabindex="-1"><a class="header-anchor" href="#トラブルシューティング-1" aria-hidden="true">#</a> トラブルシューティング</h4><p>詳細な出力用に、<code>ERROR</code>、<code>WARNING</code>、<code>INFO</code>、<code>DEBUG</code>からログレベルを選択できます。</p><p>例えば、</p><div class="language-text line-numbers-mode" data-ext="text"><pre class="language-text"><code>$ curl -s -L https://kernelcare.com/uchecker | sudo LOGLEVEL=debug python
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><p>詳細については、<a href="https://github.com/cloudlinux/kcare-uchecker" target="_blank" rel="noopener noreferrer">UChecker Githubページ</a>にアクセスしてください。</p><h2 id="kernelcare-for-iot" tabindex="-1"><a class="header-anchor" href="#kernelcare-for-iot" aria-hidden="true">#</a> KernelCare for IOT</h2><p>エンタープライズIoTユーザーや相手先商標製造会社向のARM64ベースの組み込みシステムにライブセキュリティパッチを提供します。</p><p>サポートされているディストリビューションとチップセットのリストについては、<a href="https://tuxcare.com/live-patching-services/kernelcare-iot/" target="_blank" rel="noopener noreferrer">こちらのページにアクセスしてください</a>。</p><h3 id="kernelcare-iotの仕組み" tabindex="-1"><a class="header-anchor" href="#kernelcare-iotの仕組み" aria-hidden="true">#</a> KernelCare IoTの仕組み</h3><ul><li>KernelCareチームは、脆弱性をチェックするためにセキュリティメーリングリストを常時監視しています。脆弱性が発見されると、すぐにチームはパッチを準備して、配信サーバーに送信します。</li><li>ご利用のデバイス上で、エージェントがプロセスを実行し、4時間ごとに配布サーバーをチェックします。そして、新しいパッチが見つかれば、カーネルの停止不要で、実行中のカーネルに安全に適用します。</li><li>パッチを適用するには、特別なカーネルモジュールが使用されます。まず、カーネルアドレス空間にアップデートをロードします。次に、元のコード／データを再配置して、アップデート中にコードブロックが実行されないようにします。アップデートが完了したら、元のコードからアップデートされたコードに、安全に実行パスを切り替え、古いコードが二度と実行されないようにします。</li><li>KernelCareは、以上の全作業を即座に、自動的に、サービスを中断することなしで、実行します。</li></ul><p>KernelCare for IOT の詳細については、<a href="https://tuxcare.com/live-patching-services/kernelcare-iot/" target="_blank" rel="noopener noreferrer">こちらのページにアクセスしてください</a>。</p><h2 id="qemucare" tabindex="-1"><a class="header-anchor" href="#qemucare" aria-hidden="true">#</a> QEMUCare</h2><p>QEMUCareは、クラウド提供事業者、VPSホスティング会社、QEMUベースの仮想化システムを使用するその他の企業向けの仮想パッチ適用です。バーチャルテナントのシステムを中断することなく、インフラストラクチャにパッチが適用された状態を保ちます。</p><h3 id="qemucareの仕組み" tabindex="-1"><a class="header-anchor" href="#qemucareの仕組み" aria-hidden="true">#</a> QEMUCareの仕組み</h3><ul><li>各仮想化ホストにエージェントがインストールされ、QEMUCareリポジトリから直接パッチがインストールされます。</li><li>ePortal環境では、仲介するQEMUCare ePortalサーバーと仮想化ホストが通信します。</li></ul><h3 id="qemuパッチセットの展開" tabindex="-1"><a class="header-anchor" href="#qemuパッチセットの展開" aria-hidden="true">#</a> QEMUパッチセットの展開</h3><p>バージョン1.25より、ePortalはQEMUパッチセット管理をサポートしています。QEMUパッチセット管理は、<code>Patches / QEMUcare</code>ナビゲーション項目からアクセスできます。QEMUパッチは、同じパッチソースの資格情報を使用するため、追加の構成を行う必要はありません。</p><p><img src="`+O+'" alt=""></p>',82),Re=i(`<h4 id="最新のパッチセットをインストールするcli" tabindex="-1"><a class="header-anchor" href="#最新のパッチセットをインストールするcli" aria-hidden="true">#</a> 最新のパッチセットをインストールするCLI</h4><p>デフォルトのフィードをアップデートするには、以下のコマンドを実行します。</p><div class="language-text line-numbers-mode" data-ext="text"><pre class="language-text"><code>kc.eportal qemu update
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><p><code>test</code>フィードをアップデートするには、以下のコマンドを実行します。</p><div class="language-text line-numbers-mode" data-ext="text"><pre class="language-text"><code>kc.eportal qemu update --feed test
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><p>すべての自動フィードをアップデートするには、以下のコマンドを実行します。</p><div class="language-text line-numbers-mode" data-ext="text"><pre class="language-text"><code>kc.eportal qemu auto-update
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><h4 id="アーカイブからパッチセットをデプロイするcli" tabindex="-1"><a class="header-anchor" href="#アーカイブからパッチセットをデプロイするcli" aria-hidden="true">#</a> アーカイブからパッチセットをデプロイするCLI</h4><div class="language-text line-numbers-mode" data-ext="text"><pre class="language-text"><code>~$ kc.eportal qemu deploy --help
usage: kc.eportal qemu deploy [-h] [--feed FEED] [--disabled] archive

positional arguments:
  archive      path to archive

optional arguments:
  -h, --help   show this help message and exit
  --feed FEED  feed to deploy archive to
  --disabled   do not enable patchset after deploy
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>例えば、</p><div class="language-text line-numbers-mode" data-ext="text"><pre class="language-text"><code>kc.eportal qemu deploy --feed test /tmp/U20210818_01-qemu.tar.bz2
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><p>このコマンドは、<code>U20210818_01-qemu</code>パッチセットを<code>test</code>フィードにデプロイして、有効にします。</p><h2 id="dbcare" tabindex="-1"><a class="header-anchor" href="#dbcare" aria-hidden="true">#</a> DBCare</h2><p>DBCareのベータテストが利用可能です！<a href="https://tuxcare.com/live-patching-services/databasecare/" target="_blank" rel="noopener noreferrer">こちら</a>からお申し込みください。</p><h3 id="概要-3" tabindex="-1"><a class="header-anchor" href="#概要-3" aria-hidden="true">#</a> 概要</h3><p>DBCareは、MariaDB向けのライブパッチ適用サービスです。 DBCareを使用すると、データベースのバックエンドがアップデートされている間もアプリケーションを実行し続けることができるので、データベースのパフォーマンス、信頼性、セキュリティ、コンプライアンスが強化されます。</p><h3 id="メリット-2" tabindex="-1"><a class="header-anchor" href="#メリット-2" aria-hidden="true">#</a> メリット</h3><p>データベースのアップデートは、バグの修正、システムパフォーマンスの向上、脆弱性数の削減のために行われますが、これらの活動には多大な影響と労力が必要になります。DBCareを使用すると、データベースのダウンタイム一切不要で、パッチがメモリに適用されます。</p><p>ライブパッチ適用は、メンテナンスウィンドウまでの待機不要で、迅速にセキュリティアップデートを適用します。実は、DBCareを導入している組織は、データベースシステムのほとんどのメンテナンスウィンドウを完全に削除していて、それでいて、これまで以上に安全になっています。</p><h3 id="主な機能-2" tabindex="-1"><a class="header-anchor" href="#主な機能-2" aria-hidden="true">#</a> 主な機能</h3><ul><li>現時点で、MariaDBをサポート</li><li>高可用性環境におけるデータベースのフェイルオーバーの回避</li><li>ダウンタイム中のワークロードの移行の回避</li></ul><h3 id="dbcareの仕組み" tabindex="-1"><a class="header-anchor" href="#dbcareの仕組み" aria-hidden="true">#</a> DBCareの仕組み</h3><ul><li>データベースサーバーにエージェントがインストールされ、当社のリポジトリから直接パッチがインストールされます。</li><li>このエージェントは、すべてのTuxCare製品にわたって、パッチをダウンロードして適用するために使用されます。そのため、複数のTuxCare製品を使用する場合でも、実行中のエージェントは1つだけです。</li></ul><p>DBCareの詳細については、<a href="https://tuxcare.com/live-patching-services/databasecare/" target="_blank" rel="noopener noreferrer">こちらのページにアクセスしてください</a>。</p>`,24);function qe($e,He){const r=I("RouterLink");return D(),U("div",null,[Y,e("table",null,[R,e("tbody",null,[q,$,e("tr",null,[H,e("td",null,[a("--updateと同じですが、"),d(r,{to:"/jp/live-patching-services/#config-options"},{default:l(()=>[a("UPDATE_POLICY")]),_:1}),a("を使用して、パッチの入手先を決定します。")])]),V,F,B,z,G,Q,W,X,j,Z,J,ee,ae,ie,re,de,le,ne,te,se,e("tr",null,[ce,e("td",null,[a("パッチをDDMMYY形式の日付に固定するように設定するか、KEYに日付が設定されている場合はKEYから取得します（ePortalはサポートされていません）。固定しない場合は、空にしてください。詳細は、"),d(r,{to:"/jp/live-patching-services/#sticky-patches"},{default:l(()=>[a("Stickyパッチ")]),_:1}),a("を参照してください。")])]),oe])]),ue,e("table",null,[pe,e("tbody",null,[he,me,ve,be,ge,xe,ke,fe,_e,Ce,ye,Ke,Ee,e("tr",null,[Se,e("td",null,[a("特定の日付をパッチ適用日に指定します。詳細については、"),d(r,{to:"/live-patching-services/#sticky-patches"},{default:l(()=>[a("Sticky パッチ")]),_:1}),a("を参照してください。")])]),we,Pe,Le])]),Te,e("div",Me,[Oe,e("p",null,[a("この機能は、ePortalのお客様にはご利用いただけません。ePortalをご利用の場合は、代わりに"),d(r,{to:"/jp/eportal/#feed-management"},{default:l(()=>[a("Feeds")]),_:1}),a("を使用してください。")])]),Ae,Ie,De,e("p",null,[a("SMTを無効にし、"),d(r,{to:"/jp/how-to/#how-to-update-microcode-without-reboot-with-vendor-provided-package"},{default:l(()=>[a("マイクロコードをアップデート")]),_:1}),a("し、KernelCareパッチを適用すると、ZombieLoadの脆弱性からシステムが保護されます。仮想システム（たとえば、VM、VPS、その他のクラウドインスタンスタイプ）の場合は、最後のアクション（KernelCareパッチの適用）のみが適用されることに注意してください。")]),Ue,Ne,Ye,e("p",null,[a("QEMUパッチ管理向けユーザーインターフェイスは、KernelCareパッチ向けと同じです。"),d(r,{to:"/jp/eportal/#patchset-deployment"},{default:l(()=>[a("パッチセット・デプロイメント")]),_:1}),a("のドキュメントを参照できます。")]),Re])}const ze=A(N,[["render",qe],["__file","index.html.vue"]]);export{ze as default};
